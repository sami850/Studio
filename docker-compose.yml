version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        image: studio-app
        container_name: studio-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - /var/www/vendor
            - ./:/var/www
            - ./.env:/var/www/.env
        environment:
            - APP_ENV=local
        networks:
            - app-network

    nginx:
        image: nginx:alpine
        container_name: studio-nginx
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - app
        networks:
            - app-network

    node:
        platform: linux/arm64/v8
        build:
            context: .
            dockerfile: ./docker/Dockerfile.node
        image: node
        container_name: studio-node
        ports:
            - "4000:4000"
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - /var/www/node_modules
            - ./vite.config.docker.js:/var/www/vite.config.js
        networks:
            - app-network

    db:
        platform: linux/x86_64
        image: mysql:8.0
        container_name: studio-mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - app-network
        ports:
            - "3306:3306"
        command: ["--log_bin_trust_function_creators=1"]

#    phpMyAdmin Service
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
            PMA_HOST: mysql
        ports:
            - "3400:80"
        depends_on:
            - db

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
